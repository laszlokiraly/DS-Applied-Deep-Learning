{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: hrnet predict",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/transfer/predict.py",
            "cwd": "${workspaceFolder}/transfer",
            "args": [
                "--cfg=experiments/cls_hrnet_w64_sgd_lr5e-2_wd1e-4_bs32_x100.yaml",
                "--testModel=./hrnet_final_state_largest_94_epochs10.pth.tar",
                "--dataDir=../../data",
                "--modelFamily=hrnet",
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python: resnet152 predict",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/transfer/predict.py",
            "cwd": "${workspaceFolder}/transfer",
            "args": [
                "--cfg=experiments/cls_resnet152.yaml",
                "--dataDir=../../data",
                "--modelFamily=resnet152",
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python: hrnet imagenet validation",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/hrnet-imagenet-valid/tools/valid.py",
            "cwd": "${workspaceFolder}/hrnet-imagenet-valid",
            "args": [
                // "--cfg=experiments/cls_hrnet_w18_sgd_lr5e-2_wd1e-4_bs32_x100.yaml",
                "--cfg=experiments/cls_hrnet_w18_small_v1_sgd_lr5e-2_wd1e-1_bs32_x100.yaml",
                // "--testModel=../transfer/model_states/hrnetv2_w18_imagenet_pretrained.pth",
                "--testModel=../transfer/model_states/hrnet_w18_small_model_v1.pth",
                "--dataDir=../../data"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python: hrnet transfer (small v1)",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/transfer/train.py",
            "cwd": "${workspaceFolder}/transfer",
            "args": [
                "--cfg=experiments/cls_hrnet_w18_small_v1_sgd_lr5e-2_wd1e-1_bs32_x100.yaml",
                "--testModel=model_states/hrnet_w18_small_model_v1.pth",
                "--dataDir=../../data",
                "--modelFamily=hrnet",
                "--transferEpochs=25",
                "--transferBatchSize=128"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python: hrnet transfer (largest)",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/transfer/train.py",
            "cwd": "${workspaceFolder}/transfer",
            "args": [
                "--cfg=experiments/cls_hrnet_w64_sgd_lr5e-2_wd1e-4_bs32_x100.yaml",
                "--testModel=model_states/hrnetv2_w64_imagenet_pretrained.pth",
                "--dataDir=../../data",
                "--modelFamily=hrnet",
                "--transferEpochs=15",
                "--transferBatchSize=20"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python: resnet18 transfer",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/transfer/train.py",
            "cwd": "${workspaceFolder}/transfer",
            "args": [
                "--cfg=experiments/cls_resnet18.yaml",
                "--dataDir=../../data",
                "--modelFamily=resnet18",
                "--transferEpochs=25",
                "--transferBatchSize=256"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python: resnet152 transfer",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/transfer/train.py",
            "cwd": "${workspaceFolder}/transfer",
            "args": [
                "--cfg=experiments/cls_resnet152.yaml",
                "--dataDir=../../data",
                "--modelFamily=resnet152",
                "--transferEpochs=25",
                "--transferBatchSize=32"
            ],
            "console": "integratedTerminal"
        },
        {
            "name": "Python: Current File (Integrated Terminal)",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal"
        },
        {
            "name": "Python: Remote Attach",
            "type": "python",
            "request": "attach",
            "port": 5678,
            "host": "localhost",
            "pathMappings": [
                {
                    "localRoot": "${workspaceFolder}",
                    "remoteRoot": "."
                }
            ]
        },
        {
            "name": "Python: Module",
            "type": "python",
            "request": "launch",
            "module": "enter-your-module-name-here",
            "console": "integratedTerminal"
        },
        {
            "name": "Python: Django",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/manage.py",
            "console": "integratedTerminal",
            "args": [
                "runserver",
                "--noreload",
                "--nothreading"
            ],
            "django": true
        },
        {
            "name": "Python: Flask",
            "type": "python",
            "request": "launch",
            "module": "flask",
            "env": {
                "FLASK_APP": "app.py"
            },
            "args": [
                "run",
                "--no-debugger",
                "--no-reload"
            ],
            "jinja": true
        },
        {
            "name": "Python: Current File (External Terminal)",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "externalTerminal"
        }
    ]
}